{"version":3,"sources":["redux/user/user.types.js","redux/user/user.actions.js","firebase/firebase.utils.js","redux/user/user.sagas.js","redux/root-saga.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","components/landing/Landing.js","components/dashboard/Dashboard.js","utils/query.js","components/chooseSong/ChooseSong.js","components/uploadMidi/UploadMidi.js","components/recordSong/RecordSong.js","components/clipSaved/ClipSaved.js","components/chooseMixSong/ChooseMixSong.js","redux/user/user.selector.js","components/chooseMixParts/ChooseMixParts.js","components/mixReady/MixReady.js","components/navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["UserActionTypes","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHECK_USER_SESSION","GUEST_SIGN_IN_START","signInFailure","error","type","payload","message","signUpSuccess","user","additionalData","createUserProfileDocument","userAuth","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","getSnapshotFromUserAuth","isUserAuthenticated","signInWithGoogle","signInWithEmail","signOut","signUp","signInOnSignUp","onCheckUserSession","onGoogleSignInStart","onEmailSignInStart","onSignOutStart","onSignUpStart","onSignUpSuccess","userSagas","call","userSnapshot","put","id","data","Promise","resolve","reject","unsubscribe","onAuthStateChanged","signInWithPopup","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","takeLatest","all","rootSaga","INITIAL_STATE","currentUser","userReducer","state","action","persistConfig","key","storage","whitelist","rootReducer","combineReducers","UserReducer","persistReducer","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","persistor","persistStore","Copyright","Typography","variant","color","align","Link","href","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","connect","dispatch","googleSignInStart","guestSignInStart","classes","useState","userCredentials","Container","component","maxWidth","CssBaseline","className","Avatar","Grid","item","Button","fullWidth","onClick","Box","mt","root","flexGrow","padding","textAlign","text","heading","marginBottom","createMuiTheme","typography","h1","fontSize","Dashboard","props","Fragment","ThemeProvider","container","justify","to","size","getAllSongs","axios","url","method","getPartRecordings","song","part","triggerMix","songID","mixer","recordings","formControl","minWidth","buttonGroup","withRouter","history","title","setSong","loading","setState","useEffect","midis","contests","FormControl","Select","label","value","onChange","event","target","split","MenuItem","map","pathname","disabled","push","selectEmpty","UploadMidi","TextField","RecSong","uploadAudio","audio","formData","FormData","append","post","headers","recording","audios","replace","updatePart","bind","navigator","mediaDevices","getUserMedia","stream","this","srcObject","mediaRecorder","MediaRecorder","chunks","location","bgAudio","Audio","load","ondataavailable","e","preventDefault","play","start","pause","currentTime","stop","saveAudio","blob","Blob","audioURL","window","URL","createObjectURL","concat","filter","match","sm","charAt","toUpperCase","slice","style","ref","startRecording","stopRecording","i","controls","src","deleteAudio","React","Component","RecordSong","SavedClip","selectCurrentUser","createSelector","paddingTopBottom","mapStateToProps","createStructuredSelector","soprano","tenor","alto","bass","parts","setParts","getRecordings","names","handleChange","name","mix","partID","xs","MixReady","height","alt","checkUserSession","exact","path","render","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e11a4beb.chunk.js","sourcesContent":["const UserActionTypes = {\n  GOOGLE_SIGN_IN_START: \"GOOGLE_SIGN_IN_START\",\n  EMAIL_SIGN_IN_START: \"EMAIL_SIGN_IN_START\",\n  SIGN_IN_SUCCESS: \"SIGN_IN_SUCCESS\",\n  SIGN_IN_FAILURE: \"SIGN_IN_FAILURE\",\n  SIGN_OUT_START: \"SIGN_OUT_START\",\n  SIGN_OUT_SUCCESS: \"SIGN_OUT_SUCCESS\",\n  SIGN_OUT_FAILURE: \"SIGN_OUT_FAILURE\",\n  SIGN_UP_START: \"SIGN_UP_START\",\n  SIGN_UP_SUCCESS: \"SIGN_UP_SUCCESS\",\n  SIGN_UP_FAILURE: \"SIGN_UP_FAILURE\",\n  CHECK_USER_SESSION: \"CHECK_USER_SESSION\",\n  GUEST_SIGN_IN_START: \"GUEST_SIGN_IN_START\",\n};\n\nexport default UserActionTypes;\n","import UserActionTypes from \"./user.types\";\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START,\n});\n\nexport const emailSignInStart = (emailAndPassword) => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword,\n});\n\nexport const guestSignInStart = () => ({\n  type: UserActionTypes.GUEST_SIGN_IN_START,\n});\n\nexport const signInSuccess = (user) => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user,\n});\n\nexport const signInFailure = (error) => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error.message,\n});\n\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION,\n});\n\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START,\n});\n\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS,\n});\n\nexport const signOutFailure = (error) => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  payload: error.message,\n});\n\nexport const signUpStart = (userCredentials) => ({\n  type: UserActionTypes.SIGN_UP_START,\n  payload: userCredentials,\n});\n\nexport const signUpSuccess = ({ user, additionalData }) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: { user, additionalData },\n});\n\nexport const signUpFailure = (error) => ({\n  type: UserActionTypes.SIGN_UP_FAILURE,\n  payload: error.message,\n});\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBECKEw3hF-GK814DvGW6xU67RCuQfzDkY\",\n  authDomain: \"teamcassproj1.firebaseapp.com\",\n  databaseURL: \"https://teamcassproj1.firebaseio.com\",\n  projectId: \"teamcassproj1\",\n  storageBucket: \"teamcassproj1.appspot.com\",\n  messagingSenderId: \"583083226339\",\n  appId: \"1:583083226339:web:90568dcf8dac8ef79e41d6\",\n  measurementId: \"G-G4PMVEHGMR\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map((doc) => {\n    const { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items,\n    };\n  });\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n","import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure,\n} from \"./user.actions\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nfunction* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nfunction* signUp({ payload: { displayName, password, email } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nfunction* signInOnSignUp({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInOnSignUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n  ]);\n}\n","import { all, call } from \"redux-saga/effects\";\n\nimport { userSagas } from \"./user/user.sagas\";\n\nexport default function* rootSaga() {\n  yield all([call(userSagas)]);\n}\n","import UserActionTypes from \"./user.types\";\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n        error: null,\n      };\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        currentUser: null,\n        error: null,\n      };\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case UserActionTypes.GUEST_SIGN_IN_START:\n      return {\n        ...state,\n        currentUser: {\n          email: \"guest@guest.com\",\n          id: \"817xvzXncusfgYUFjfJFuyiFFgdCsfxy97aysd\",\n          displayName: \"Guest\",\n        },\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport UserReducer from \"./user/user.reducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"],\n};\n\nconst rootReducer = combineReducers({\n  user: UserReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\n\nimport rootSaga from \"./root-saga\";\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\n// Auth imports\nimport {\n  googleSignInStart,\n  guestSignInStart,\n} from \"../../redux/user/user.actions\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"\">\n        Quartet\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Landing = ({ googleSignInStart, guestSignInStart }) => {\n  const classes = useStyles();\n\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = userCredentials;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   emailSignInStart(email, password);\n  // };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        {/* <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleChange}\n            value={email}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleChange}\n            value={password}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form> */}\n        <Grid item>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={() => googleSignInStart()}\n          >\n            Sign In With Google\n          </Button>\n        </Grid>\n        <h2>OR</h2>\n        <Grid item>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            onClick={() => guestSignInStart()}\n          >\n            Guest\n          </Button>\n        </Grid>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  guestSignInStart: () => dispatch(guestSignInStart()),\n});\n\nexport default connect(null, mapDispatchToProps)(Landing);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  form: {\n    \"& > *\": {\n      marginTop: theme.spacing(1)\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(15),\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  heading: {\n    marginBottom: theme.spacing(10)\n  }\n}));\n\nconst theme = createMuiTheme();\n\ntheme.typography.h1 = {\n  fontSize: \"2rem\"\n};\n\nconst recordings = [\n  {\n    key: \"0\",\n    title: \"Birlinn\",\n    createdAt: \"Monday, May 25 @ 6:30am\"\n  },\n  {\n    key: \"1\",\n    title: \"Morag\",\n    createdAt: \"Monday, May 13 @ 7:45pm\"\n  },\n  {\n    key: \"2\",\n    title: \"Uibhist\",\n    createdAt: \"Monday, May 1 @ 6:31am\"\n  }\n];\n\nfunction Recordings(props) {\n  const recordings = props.recordings;\n  const recordingList = recordings.map(recording => (\n    <ListItem key={recording.key}>\n      <ListItemAvatar>\n        <Avatar>\n          <FolderIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={recording.title} secondary={recording.createdAt} />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" aria-label=\"delete\">\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  ));\n  return (\n    <List>\n      {recordingList}\n      <Button variant=\"contained\" color=\"primary\">\n        New Recording\n      </Button>\n    </List>\n  );\n}\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth=\"lg\">\n          <div className={classes.root}>\n            <Typography className={classes.heading} variant=\"h3\">Hello, {props.displayName}</Typography>\n            <Grid container spacing={3}>\n              <Grid container justify=\"center\" spacing={5}>\n                <Grid item>\n                  <Link to=\"/choose-mix-song\">\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                      Mix!\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link to=\"/choose-song\">\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                      Create!\n                    </Button>\n                  </Link>\n                </Grid>\n              </Grid>\n              {/* <Grid item sm={6}>\n                <Paper className={classes.paper}>\n                  <Typography variant=\"h3\" gutterBottom>\n                    Recent Recordings\n                  </Typography>\n                  <Grid item>\n                    <div>\n                      <Recordings recordings={recordings} />\n                    </div>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Grid item sm={6} style={{ paddingTop: theme.spacing(15) }}>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                  <TextField\n                    id=\"name\"\n                    variant=\"outlined\"\n                    fullWidth\n                    label=\"User Name\"\n                  />\n                  <TextField\n                    id=\"email\"\n                    variant=\"outlined\"\n                    fullWidth\n                    label=\"Email\"\n                  />\n                  <TextField\n                    id=\"phone\"\n                    variant=\"outlined\"\n                    fullWidth\n                    label=\"Password\"\n                  />\n                  <Button variant=\"contained\" color=\"primary\">\n                    Update\n                  </Button>\n                </form>\n              </Grid> */}\n            </Grid>\n          </div>\n        </Container>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n","import axios from \"axios\";\n\nexport const getAllSongs = () => {\n  return axios({\n    url: \"/midi-files\",\n    method: \"get\",\n  });\n};\n\nexport const getPartRecordings = (song, part) => {\n  return axios({\n    url: `/get-recording/${song}/${part}`,\n    method: \"get\",\n  });\n};\n\nexport const triggerMix = (songID, mixer, recordings) => {\n  return axios({\n    url: `/mix/`,\n    method: \"post\",\n    data: {\n      songID,\n      mixer,\n      recordings,\n    },\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { getAllSongs } from \"../../utils/query\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  formControl: {\n    margin: theme.spacing(8),\n    minWidth: 200\n  },\n  buttonGroup: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst ChooseSong = ( { history } ) => {\n  const classes = useStyles();\n  const [song, setSong] = useState({\n    id: null,\n    title: null,\n  });\n  const [state, setState] = useState({\n    loading: true,\n    data: null,\n  });\n\n  useEffect(() => {\n    const contests = async () => {\n      let { data } = await getAllSongs();\n      let { midis } = data;\n      setState((state) => ({ ...state, loading: false, data: midis }));\n    };\n    contests();\n  }, []);\n\n  const { loading, data } = state;\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n    const [id, title] = value.split(\"&&\");\n    setSong({ ...song, id, title });\n  };\n\n  return loading ? (<h1>Loading...</h1>) : (\n    <Container>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography variant=\"h3\">Choose your song</Typography>\n        <FormControl className={classes.formControl}>\n          <Select\n            label=\"\"\n            value={song.id + \"&&\" + song.title}\n            onChange={handleChange}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {data.map((song) => (\n              <MenuItem key={song.id} value={song.id + \"&&\" + song.title}>\n                {song.title}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <Link to={{ pathname: '/record-song', state: { song: song } }}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        disabled={song.id ? false : true}\n        onClick={() => {\n          history.push(\"/record-song\", {\n            ...song,\n          });\n        }}\n      >\n          Let's go\n        </Button>\n      </Link>\n\n    </Container>\n  );\n}\n\nexport default withRouter(ChooseSong);\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 200\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\nexport default function UploadMidi() {\n    const classes = useStyles();\n    return (\n        <Container>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography variant=\"h1\">Upload Midi File</Typography>\n                <FormControl className={classes.formControl}>\n                    <TextField id=\"title\" variant=\"outlined\" fullWidth label=\"Title\" />\n                </FormControl>\n                <Button>Upload</Button>\n            </div>\n        </Container>\n    )\n}","import React from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst audioType = \"audio/wav\";\n\nclass RecSong extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recording: false,\n      audios: [],\n      part: \"\",\n      displayName: props.uid.replace(\" \", \"_\"),\n    };\n    this.updatePart = this.updatePart.bind(this);\n  }\n\n  async componentDidMount() {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    // show it to user\n\n    console.log(this.state.displayName);\n\n    this.audio.srcObject = stream;\n    // this.audio.play();\n    // init recording\n    this.mediaRecorder = new MediaRecorder(stream);\n    // init data storage for video chunks\n    this.chunks = [];\n    console.log(this.props.location.state.song);\n    this.bgAudio = new Audio(`/midi/${this.props.location.state.song.id}.mp3`);\n    this.bgAudio.load();\n    // listen for data from media recorder\n    this.mediaRecorder.ondataavailable = (e) => {\n      if (e.data && e.data.size > 0) {\n        this.chunks.push(e.data);\n      }\n    };\n  }\n\n  startRecording(e) {\n    e.preventDefault();\n    this.bgAudio.play();\n    // wipe old data chunks\n    this.chunks = [];\n    // start recorder with 10ms buffer\n    this.mediaRecorder.start(10);\n    // say that we're recording\n    this.setState({ recording: true });\n  }\n\n  stopRecording(e) {\n    e.preventDefault();\n    this.bgAudio.pause();\n    this.bgAudio.currentTime = 0;\n    // stop the recorder\n    this.mediaRecorder.stop();\n    // say that we're not recording\n    this.setState({ recording: false });\n    // save the video to memory\n    this.saveAudio();\n  }\n\n  saveAudio() {\n    // convert saved chunks to blob\n    const blob = new Blob(this.chunks, { type: audioType });\n    // generate video url from blob\n    const audioURL = window.URL.createObjectURL(blob);\n    // append videoURL to list of saved videos for rendering\n    const audios = this.state.audios.concat([{ url: audioURL, blob: blob }]);\n    this.setState({ audios });\n    console.log(audios);\n  }\n  uploadAudio = (audio, song, displayName) => {\n    console.log(`Blob is: - ${audio}`);\n    var formData = new FormData();\n    formData.append(\"recording\", audio);\n    formData.append(\"songID\", song.id);\n\n    formData.append(\"uid\", displayName);\n\n    formData.append(\"partID\", this.state.part);\n    axios.post(\"/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    this.props.history.push(\"/clip-saved\", {\n      // Link to /details and pass in detailsObject as a prop, which contains item\n    });\n  };\n  deleteAudio(audioURL) {\n    // filter out current videoURL from the list of saved videos\n    const audios = this.state.audios.filter((a) => a !== audioURL);\n    this.setState({ audios });\n  }\n  updatePart(event) {\n    this.setState({ part: event.target.value });\n  }\n\n  render() {\n    const { match, location, history } = this.props;\n    const { recording, audios, part } = this.state;\n    const { song } = this.props.location.state;\n    return (\n      <Container>\n        <CssBaseline />\n\n        <Grid container justify=\"center\">\n          <Grid item sm={6}>\n            <Typography variant=\"h3\">Choose Role</Typography>\n            <FormControl>\n              <Select value={part} onChange={this.updatePart}>\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value=\"soprano\">Soprano</MenuItem>\n                <MenuItem value=\"alto\">Alto</MenuItem>\n                <MenuItem value=\"tenor\">Tenor</MenuItem>\n                <MenuItem value=\"bass\">Bass</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item sm={6}>\n            <Typography variant=\"h3\">\n              Record {part.charAt(0).toUpperCase() + part.slice(1)} Part\n            </Typography>\n            <Typography variant=\"h4\">{song.title}</Typography>\n            <div>\n              <audio\n                style={{ width: 400 }}\n                ref={(a) => {\n                  this.audio = a;\n                }}\n              >\n                <p>Audio stream not available. </p>\n              </audio>\n              <div>\n                {!recording && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => this.startRecording(e)}\n                  >\n                    Record\n                  </Button>\n                )}\n                {recording && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => this.stopRecording(e)}\n                  >\n                    Stop\n                  </Button>\n                )}\n              </div>\n              {/* <Link to=\"/clip-saved\">\n                <Button\n                  style={{ marginTop: \"2rem\" }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Save\n                </Button>\n              </Link> */}\n              <div>\n                <h3>Draft Recordings</h3>\n                {audios.map((audio, i) => (\n                  <div key={`audio_${i}`}>\n                    <audio controls style={{ width: 200 }} src={audio.url} />\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => this.deleteAudio(audio)}\n                      >\n                        Delete\n                      </Button>\n                    </div>\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{ marginTop: \"2rem\" }}\n                        onClick={() =>\n                          this.uploadAudio(\n                            audio.blob,\n                            song,\n                            this.state.displayName\n                          )\n                        }\n                      >\n                        Upload\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n}\nconst RecordSong = withRouter(RecSong);\nexport default RecordSong;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }\n}));\n\nexport default function SavedClip() {\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography variant=\"h3\">Clip Saved!</Typography>\n      </div>\n      \n      <Link to=\"/dashboard\">\n        <Button style={{marginTop: \"2rem\"}} variant=\"contained\" color=\"primary\" size=\"large\">\n          Back to Dashboard\n        </Button>\n      </Link>\n      \n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { getAllSongs } from \"../../utils/query\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  formControl: {\n    margin: theme.spacing(8),\n    minWidth: 200,\n  },\n}));\n\nconst ChooseMixSong = ({ history }) => {\n  const classes = useStyles();\n  const [song, setSong] = useState({\n    id: null,\n    title: null,\n  });\n  const [state, setState] = useState({\n    loading: true,\n    data: null,\n  });\n  useEffect(() => {\n    const contests = async () => {\n      let { data } = await getAllSongs();\n      let { midis } = data;\n      setState((state) => ({ ...state, loading: false, data: midis }));\n    };\n    contests();\n  }, []);\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n    const [id, title] = value.split(\"&&\");\n    setSong({ ...song, id, title });\n  };\n  const { loading, data } = state;\n  return loading ? (\n    <h1>Loading...</h1>\n  ) : (\n    <Container>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography variant=\"h3\">Choose your song</Typography>\n        <FormControl className={classes.formControl}>\n          <Select\n            label=\"\"\n            value={song.id + \"&&\" + song.title}\n            onChange={handleChange}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {data.map((song) => (\n              <MenuItem key={song.id} value={song.id + \"&&\" + song.title}>\n                {song.title}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      {/* {song ? <ChooseMixParts /> : null} */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        disabled={song.id ? false : true}\n        onClick={() => {\n          history.push(\"/choose-mix-parts\", {\n            ...song,\n          });\n        }}\n      >\n        Let's go\n      </Button>\n    </Container>\n  );\n};\n\nexport default withRouter(ChooseMixSong);\n","import { createSelector } from \"reselect\";\n\nconst selectUser = (state) => state.user;\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  (user) => user.currentUser\n);\n","import React, { useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { getPartRecordings, triggerMix } from \"../../utils/query\";\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginBottom: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  paddingTopBottom: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(8),\n  },\n}));\n\nconst ChooseMixParts = ({ location, currentUser }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    soprano: null,\n    tenor: null,\n    alto: null,\n    bass: null,\n    loading: true,\n  });\n  const [parts, setParts] = React.useState({\n    soprano: null,\n    tenor: null,\n    alto: null,\n    bass: null,\n  });\n\n  useEffect(() => {\n    const getRecordings = async (song, part) => {\n      const { data } = await getPartRecordings(song, part);\n      const names = data.recordings.map((item) => item.uid);\n      setState((state) => ({ ...state, [part]: names }));\n    };\n    getRecordings(location.state.id, \"soprano\");\n    getRecordings(location.state.id, \"tenor\");\n    getRecordings(location.state.id, \"alto\");\n    getRecordings(location.state.id, \"bass\");\n    setState((state) => ({ ...state, loading: false }));\n  }, [location.state.id]);\n\n  const handleChange = (event) => {\n    setParts((state) => ({\n      ...state,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const mix = async () => {\n    let recordings = [\n      {\n        partID: \"soprano\",\n        uid: parts.soprano,\n      },\n      {\n        partID: \"tenor\",\n        uid: parts.tenor,\n      },\n      {\n        partID: \"alto\",\n        uid: parts.alto,\n      },\n      {\n        partID: \"bass\",\n        uid: parts.bass,\n      },\n    ];\n\n    recordings = recordings.filter((item) => item.uid !== null);\n\n    await triggerMix(\n      location.state.id,\n      currentUser.displayName.replace(\" \", \"_\"),\n      recordings\n    );\n  };\n  const { soprano, tenor, alto, bass, loading } = state;\n  return loading ? (\n    <h1>Loading...</h1>\n  ) : (\n      <Container>\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography variant=\"h3\">{location.state.title}</Typography>\n        </div>\n        <Grid container spacing={3} className={classes.paddingTopBottom}>\n          <Grid item xs={3}>\n            <Typography>Soprano</Typography>\n            <FormControl className={classes.formControl}>\n              <Select\n                label=\"\"\n                name=\"soprano\"\n                value={parts.soprano}\n                onChange={handleChange}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {soprano\n                  ? soprano.map((user) => (\n                    <MenuItem value={user}>{user}</MenuItem>\n                  ))\n                  : null}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography>Tenor</Typography>\n            <FormControl className={classes.formControl}>\n              <Select\n                label=\"\"\n                name=\"tenor\"\n                value={parts.tenor}\n                onChange={handleChange}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {tenor\n                  ? tenor.map((user) => <MenuItem value={user}>{user}</MenuItem>)\n                  : null}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography>Alto</Typography>\n            <FormControl className={classes.formControl}>\n              <Select\n                label=\"\"\n                name=\"alto\"\n                value={parts.alto}\n                onChange={handleChange}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {alto\n                  ? alto.map((user) => <MenuItem value={user}>{user}</MenuItem>)\n                  : null}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography>Bass</Typography>\n            <FormControl className={classes.formControl}>\n              <Select\n                label=\"\"\n                name=\"bass\"\n                value={parts.bass}\n                onChange={handleChange}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {bass\n                  ? bass.map((user) => <MenuItem value={user}>{user}</MenuItem>)\n                  : null}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n        <Link to=\"/mix-ready\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={() => mix()}\n          >\n            Mix!\n        </Button>\n        </Link>\n      </Container>\n    );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default withRouter(connect(mapStateToProps)(ChooseMixParts));\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  padding: {\n    margin: theme.spacing(8),\n    minWidth: 200\n  }\n}));\n\nexport default function MixReady() {\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography variant=\"h3\">Your mix is ready!</Typography>\n      </div>\n\n      <Button\n        className={classes.padding}\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n      >\n        Download\n      </Button>\n    </Container>\n  );\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { signOutStart } from \"../../redux/user/user.actions\";\nimport \"./style.css\";\n\nconst Navbar = ({ signOut, currentUser }) => {\n  return (\n    <div className=\"navbar\">\n      <Grid justify=\"space-between\" container spacing={3}>\n        <Grid item>\n          <Link to=\"/dashboard\">\n            <img src=\"../quartetlogo.png\" height=\"80\" alt=\"Quartet Logo\" />\n          </Link>\n        </Grid>\n        {currentUser ? (\n          <Grid item>\n            <Button\n              style={{marginTop: \"25%\"}}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => signOut()}\n            >\n              Sign Out\n            </Button>\n          </Grid>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signOut: () => dispatch(signOutStart()),\n});\n\nexport default connect(null, mapDispatchToProps)(Navbar);\n","// Import react and utilities\nimport React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\n// Import global styles\nimport \"./App.css\";\n// Impoort the page components\nimport Landing from \"./components/landing/Landing\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ChooseSong from \"./components/chooseSong/ChooseSong\";\nimport UploadMidi from \"./components/uploadMidi/UploadMidi\";\nimport RecordSong from \"./components/recordSong/RecordSong\";\nimport ClipSaved from \"./components/clipSaved/ClipSaved\";\nimport ChooseMixSong from \"./components/chooseMixSong/ChooseMixSong\";\nimport ChooseMixParts from \"./components/chooseMixParts/ChooseMixParts\";\nimport MixReady from \"./components/mixReady/MixReady\";\nimport Navbar from \"./components/navbar/Navbar\";\n\nimport { checkUserSession } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selector\";\n\nfunction App({ currentUser, checkUserSession }) {\n  const [state, setState] = useState({\n    loading: true,\n  });\n  useEffect(() => {\n    checkUserSession();\n    setState((state) => ({ ...state, loading: false }));\n  }, [checkUserSession]);\n  const { loading } = state;\n  return loading ? (\n    <h1>Loading...</h1>\n  ) : (\n\n    <div className=\"App\">\n      <Router>\n        <Navbar currentUser={currentUser} />\n        <div>\n          {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() =>\n                currentUser ? <Redirect to=\"/dashboard\" /> : <Landing />\n              }\n            />\n            <Route\n              path=\"/dashboard\"\n              render={() => (currentUser ? <Dashboard displayName={currentUser.displayName}/> : <Redirect to=\"/\" />)}\n            />\n            <Route\n              path=\"/choose-song\"\n              render={() =>\n                currentUser ? <ChooseSong /> : <Redirect to=\"/\" />\n              }\n            />\n            <Route\n              path=\"/upload-midi\"\n              render={() =>\n                currentUser ? <UploadMidi /> : <Redirect to=\"/\" />\n              }\n            />\n            <Route path=\"/record-song\" render={() => <RecordSong uid={currentUser.displayName}/>} />\n            <Route\n              path=\"/clip-saved\"\n              render={() =>\n                currentUser ? <ClipSaved /> : <Redirect to=\"/\" />\n              }\n            />\n            <Route\n              path=\"/choose-mix-song\"\n              render={() =>\n                currentUser ? <ChooseMixSong /> : <Redirect to=\"/\" />\n              }\n            />\n            <Route\n              path=\"/choose-mix-parts\"\n              render={() =>\n                currentUser ? <ChooseMixParts /> : <Redirect to=\"/\" />\n              }\n            />\n            <Route\n              path=\"/mix-ready\"\n              render={() => (currentUser ? <MixReady /> : <Redirect to=\"/\" />)}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkUserSession: () => dispatch(checkUserSession()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport { store, persistor } from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}